{"version":3,"sources":["../../../src/Controller/CodeMove/Delivery.controller.ts"],"sourcesContent":["import { Body, Controller, Delete, Get, Param, Post, Put } from '@nestjs/common';\nimport { CurrentUser, UserIp } from '@Helper/Common.helper';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ResponseEnum } from '@Helper/Enum/ResponseEnum';\nimport { JWTAuthController } from '@Controller/JWTAuth.controller';\nimport { DeliveryService } from '@Root/Service/CodeMove/Delivery.service';\nimport { DeliveryModel } from '@Model/CodeMove/Delivery.model';\n\n\n@Controller({ path: \"Delivery\", version: '1' })\n@ApiTags(\"Delivery\")\nexport class DeliveryController extends JWTAuthController {\n\n    constructor(private _DeliveryService: DeliveryService) {\n        super();\n    }\n\n    @Get('List')\n    async List() {\n        const data = await this._DeliveryService.GetAll();\n        return this.SendResponseData(data);\n    }\n\n    @Get('ById/:Id')\n    async ById(@Param('Id') Id: string) {\n        const data = await this._DeliveryService.GetById(Id);\n        return this.SendResponseData(data);\n    }\n\n    @Post('Insert')\n    async Insert(@Body() DeliveryData: DeliveryModel, @CurrentUser() UserId: string, @UserIp() UserIp: string) {\n        await this._DeliveryService.Insert(DeliveryData, UserId, UserIp);\n        return this.SendResponse(ResponseEnum.Success, ResponseEnum.Created);\n    }\n\n    @Put('Update/:Id')\n    async Update(@Param('Id') Id: string, @Body() DeliveryData: DeliveryModel, @CurrentUser() UserId: string, @UserIp() UserIp: string) {\n        await this._DeliveryService.Update(Id, DeliveryData, UserId, UserIp);\n        return this.SendResponse(ResponseEnum.Success, ResponseEnum.Updated);\n    }\n\n    @Delete('Delete/:Id')\n    async Delete(@Param('Id') Id: string, @UserIp() UserIp: string) {\n        await this._DeliveryService.Delete(Id, UserIp);\n        return this.SendResponse(ResponseEnum.Success, ResponseEnum.Deleted);\n    }\n}\n"],"names":["DeliveryController","JWTAuthController","List","data","_DeliveryService","GetAll","SendResponseData","ById","Id","GetById","Insert","DeliveryData","UserId","UserIp","SendResponse","ResponseEnum","Success","Created","Update","Updated","Delete","Deleted","path","version"],"mappings":";;;;+BAWaA;;;eAAAA;;;wBAXmD;8BAC5B;yBACZ;8BACK;mCACK;iCACF;+BACF;;;;;;;;;;;;;;;AAKvB,IAAA,AAAMA,qBAAN,MAAMA,2BAA2BC,oCAAiB;IAMrD,MACMC,OAAO;QACT,MAAMC,OAAO,MAAM,IAAI,CAACC,gBAAgB,CAACC,MAAM;QAC/C,OAAO,IAAI,CAACC,gBAAgB,CAACH;IACjC;IAEA,MACMI,KAAK,AAAaC,EAAU,EAAE;QAChC,MAAML,OAAO,MAAM,IAAI,CAACC,gBAAgB,CAACK,OAAO,CAACD;QACjD,OAAO,IAAI,CAACF,gBAAgB,CAACH;IACjC;IAEA,MACMO,OAAO,AAAQC,YAA2B,EAAE,AAAeC,MAAc,EAAE,AAAUC,MAAc,EAAE;QACvG,MAAM,IAAI,CAACT,gBAAgB,CAACM,MAAM,CAACC,cAAcC,QAAQC;QACzD,OAAO,IAAI,CAACC,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAED,0BAAY,CAACE,OAAO;IACvE;IAEA,MACMC,OAAO,AAAaV,EAAU,EAAE,AAAQG,YAA2B,EAAE,AAAeC,MAAc,EAAE,AAAUC,MAAc,EAAE;QAChI,MAAM,IAAI,CAACT,gBAAgB,CAACc,MAAM,CAACV,IAAIG,cAAcC,QAAQC;QAC7D,OAAO,IAAI,CAACC,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAED,0BAAY,CAACI,OAAO;IACvE;IAEA,MACMC,OAAO,AAAaZ,EAAU,EAAE,AAAUK,MAAc,EAAE;QAC5D,MAAM,IAAI,CAACT,gBAAgB,CAACgB,MAAM,CAACZ,IAAIK;QACvC,OAAO,IAAI,CAACC,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAED,0BAAY,CAACM,OAAO;IACvE;IAhCA,YAAY,AAAQjB,gBAAiC,CAAE;QACnD,KAAK,SADWA,mBAAAA;IAEpB;AA+BJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QArCckB,MAAM;QAAYC,SAAS"}