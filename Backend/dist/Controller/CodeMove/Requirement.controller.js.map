{"version":3,"sources":["../../../src/Controller/CodeMove/Requirement.controller.ts"],"sourcesContent":["// src/Controller/CodeMove/Requirement.controller.ts\nimport { Body, Controller, Delete, Get, Param, Post, Put } from '@nestjs/common';\nimport { CurrentUser, UserIp } from '@Helper/Common.helper';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ResponseEnum } from '@Helper/Enum/ResponseEnum';\nimport { JWTAuthController } from '@Controller/JWTAuth.controller';\nimport { RequirementService } from '@Root/Service/CodeMove/Requirement.service';\nimport { RequirementModel } from '@Model/CodeMove/Requirement.model';\n\n@Controller({ path: \"Requirement\", version: '1' })\n@ApiTags(\"Requirement\")\nexport class RequirementController extends JWTAuthController {\n\n    constructor(private _RequirementService: RequirementService) {\n        super();\n    }\n\n    @Get('List')\n    async List() {\n        const data = await this._RequirementService.GetAll();\n        return this.SendResponseData(data);\n    }\n\n    @Get('RequirementDetail')\n    async RequirementDetail() {\n        const data = await this._RequirementService.RequirementDetail();\n        return this.SendResponseData(data);\n    }\n\n    @Get('ById/:Id')\n    async ById(@Param('Id') Id: string) {\n        const data = await this._RequirementService.GetById(Id);\n        return this.SendResponseData(data);\n    }\n\n    @Post('Insert')\n    async Insert(@Body() RequirementData: RequirementModel, @CurrentUser() UserId: string, @UserIp() UserIp: string) {\n        await this._RequirementService.Insert(RequirementData, UserId, UserIp);\n        return this.SendResponse(ResponseEnum.Success, ResponseEnum.Created);\n    }\n\n    @Put('Update/:Id')\n    async Update(@Param('Id') Id: string, @Body() RequirementData: RequirementModel, @CurrentUser() UserId: string, @UserIp() UserIp: string) {\n        await this._RequirementService.Update(Id, RequirementData, UserId, UserIp);\n        return this.SendResponse(ResponseEnum.Success, ResponseEnum.Updated);\n    }\n\n    @Delete('Delete/:Id')\n    async Delete(@Param('Id') Id: string, @UserIp() UserIp: string) {\n        await this._RequirementService.Delete(Id, UserIp);\n        return this.SendResponse(ResponseEnum.Success, ResponseEnum.Deleted);\n    }\n}\n"],"names":["RequirementController","JWTAuthController","List","data","_RequirementService","GetAll","SendResponseData","RequirementDetail","ById","Id","GetById","Insert","RequirementData","UserId","UserIp","SendResponse","ResponseEnum","Success","Created","Update","Updated","Delete","Deleted","path","version"],"mappings":"AAAA,oDAAoD;;;;;+BAWvCA;;;eAAAA;;;wBAVmD;8BAC5B;yBACZ;8BACK;mCACK;oCACC;kCACF;;;;;;;;;;;;;;;AAI1B,IAAA,AAAMA,wBAAN,MAAMA,8BAA8BC,oCAAiB;IAMxD,MACMC,OAAO;QACT,MAAMC,OAAO,MAAM,IAAI,CAACC,mBAAmB,CAACC,MAAM;QAClD,OAAO,IAAI,CAACC,gBAAgB,CAACH;IACjC;IAEA,MACMI,oBAAoB;QACtB,MAAMJ,OAAO,MAAM,IAAI,CAACC,mBAAmB,CAACG,iBAAiB;QAC7D,OAAO,IAAI,CAACD,gBAAgB,CAACH;IACjC;IAEA,MACMK,KAAK,AAAaC,EAAU,EAAE;QAChC,MAAMN,OAAO,MAAM,IAAI,CAACC,mBAAmB,CAACM,OAAO,CAACD;QACpD,OAAO,IAAI,CAACH,gBAAgB,CAACH;IACjC;IAEA,MACMQ,OAAO,AAAQC,eAAiC,EAAE,AAAeC,MAAc,EAAE,AAAUC,MAAc,EAAE;QAC7G,MAAM,IAAI,CAACV,mBAAmB,CAACO,MAAM,CAACC,iBAAiBC,QAAQC;QAC/D,OAAO,IAAI,CAACC,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAED,0BAAY,CAACE,OAAO;IACvE;IAEA,MACMC,OAAO,AAAaV,EAAU,EAAE,AAAQG,eAAiC,EAAE,AAAeC,MAAc,EAAE,AAAUC,MAAc,EAAE;QACtI,MAAM,IAAI,CAACV,mBAAmB,CAACe,MAAM,CAACV,IAAIG,iBAAiBC,QAAQC;QACnE,OAAO,IAAI,CAACC,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAED,0BAAY,CAACI,OAAO;IACvE;IAEA,MACMC,OAAO,AAAaZ,EAAU,EAAE,AAAUK,MAAc,EAAE;QAC5D,MAAM,IAAI,CAACV,mBAAmB,CAACiB,MAAM,CAACZ,IAAIK;QAC1C,OAAO,IAAI,CAACC,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAED,0BAAY,CAACM,OAAO;IACvE;IAtCA,YAAY,AAAQlB,mBAAuC,CAAE;QACzD,KAAK,SADWA,sBAAAA;IAEpB;AAqCJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QA3CcmB,MAAM;QAAeC,SAAS"}