{"version":3,"sources":["../../../src/Controller/CodeMove/CustomerQuote.controller.ts"],"sourcesContent":["import { Body, Controller, Delete, Get, Param, Post, Put } from '@nestjs/common';\nimport { CurrentUser, UserIp } from '@Helper/Common.helper';\nimport { ApiTags } from '@nestjs/swagger';\nimport { JWTAuthController } from '@Controller/JWTAuth.controller';\nimport { ResponseEnum } from '@Helper/Enum/ResponseEnum';\nimport { CustomerQuoteService } from '@Root/Service/CodeMove/CustomerQuote.service';\nimport { CustomerQuoteModel } from '@Model/CodeMove/CustomerQuote.model';\n\n@Controller({ path: \"CustomerQuote\", version: '1' })\n@ApiTags(\"CustomerQuote\")\nexport class CustomerQuoteController extends JWTAuthController {\n    constructor(private _CustomerQuoteService: CustomerQuoteService) {\n        super();\n    }\n\n    @Get('List')\n    async List() {\n        const data = await this._CustomerQuoteService.GetAll();\n        return this.SendResponseData(data);\n    }\n\n    @Get('ById/:Id')\n    async ById(@Param('Id') Id: string) {\n        const data = await this._CustomerQuoteService.GetById(Id);\n        return this.SendResponseData(data);\n    }\n\n    @Post('Insert')\n    async Insert(@Body() QuoteData: CustomerQuoteModel, @CurrentUser() UserId: string, @UserIp() UserIp: string) {\n        await this._CustomerQuoteService.Insert(QuoteData, UserId, UserIp);\n        return this.SendResponse(ResponseEnum.Success, ResponseEnum.Created);\n    }\n\n    @Put('Update/:Id')\n    async Update(@Param('Id') Id: string, @Body() QuoteData: CustomerQuoteModel, @CurrentUser() UserId: string, @UserIp() UserIp: string) {\n        await this._CustomerQuoteService.Update(Id, QuoteData, UserId, UserIp);\n        return this.SendResponse(ResponseEnum.Success, ResponseEnum.Updated);\n    }\n\n    @Delete('Delete/:Id')\n    async Delete(@Param('Id') Id: string, @UserIp() UserIp: string) {\n        await this._CustomerQuoteService.Delete(Id, UserIp);\n        return this.SendResponse(ResponseEnum.Success, ResponseEnum.Deleted);\n    }\n}\n"],"names":["CustomerQuoteController","JWTAuthController","List","data","_CustomerQuoteService","GetAll","SendResponseData","ById","Id","GetById","Insert","QuoteData","UserId","UserIp","SendResponse","ResponseEnum","Success","Created","Update","Updated","Delete","Deleted","path","version"],"mappings":";;;;+BAUaA;;;eAAAA;;;wBAVmD;8BAC5B;yBACZ;mCACU;8BACL;sCACQ;oCACF;;;;;;;;;;;;;;;AAI5B,IAAA,AAAMA,0BAAN,MAAMA,gCAAgCC,oCAAiB;IAK1D,MACMC,OAAO;QACT,MAAMC,OAAO,MAAM,IAAI,CAACC,qBAAqB,CAACC,MAAM;QACpD,OAAO,IAAI,CAACC,gBAAgB,CAACH;IACjC;IAEA,MACMI,KAAK,AAAaC,EAAU,EAAE;QAChC,MAAML,OAAO,MAAM,IAAI,CAACC,qBAAqB,CAACK,OAAO,CAACD;QACtD,OAAO,IAAI,CAACF,gBAAgB,CAACH;IACjC;IAEA,MACMO,OAAO,AAAQC,SAA6B,EAAE,AAAeC,MAAc,EAAE,AAAUC,MAAc,EAAE;QACzG,MAAM,IAAI,CAACT,qBAAqB,CAACM,MAAM,CAACC,WAAWC,QAAQC;QAC3D,OAAO,IAAI,CAACC,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAED,0BAAY,CAACE,OAAO;IACvE;IAEA,MACMC,OAAO,AAAaV,EAAU,EAAE,AAAQG,SAA6B,EAAE,AAAeC,MAAc,EAAE,AAAUC,MAAc,EAAE;QAClI,MAAM,IAAI,CAACT,qBAAqB,CAACc,MAAM,CAACV,IAAIG,WAAWC,QAAQC;QAC/D,OAAO,IAAI,CAACC,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAED,0BAAY,CAACI,OAAO;IACvE;IAEA,MACMC,OAAO,AAAaZ,EAAU,EAAE,AAAUK,MAAc,EAAE;QAC5D,MAAM,IAAI,CAACT,qBAAqB,CAACgB,MAAM,CAACZ,IAAIK;QAC5C,OAAO,IAAI,CAACC,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAED,0BAAY,CAACM,OAAO;IACvE;IAhCA,YAAY,AAAQjB,qBAA2C,CAAE;QAC7D,KAAK,SADWA,wBAAAA;IAEpB;AA+BJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QApCckB,MAAM;QAAiBC,SAAS"}