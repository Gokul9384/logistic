{"version":3,"sources":["../../../src/Controller/CodeMove/ServiceArea.controller.ts"],"sourcesContent":["import { Body, Controller, Delete, Get, Param, Post, Put } from '@nestjs/common';\nimport { CurrentUser, UserIp } from '@Helper/Common.helper';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ResponseEnum } from '@Helper/Enum/ResponseEnum';\nimport { JWTAuthController } from '@Controller/JWTAuth.controller';\nimport { ServiceAreaService } from '@Root/Service/CodeMove/ServiceArea.service';\nimport { ServiceAreaModel } from '@Model/CodeMove/ServiceArea.model';\n\n\n\n@Controller({ path: \"ServiceArea\", version: '1' })\n@ApiTags(\"ServiceArea\")\nexport class ServiceAreaController extends JWTAuthController {\n\n    constructor(private _ServiceAreaService: ServiceAreaService) {\n        super()\n    }\n\n    @Get('List')\n    async List() {\n        const ServiceAreaListData = await this._ServiceAreaService.GetAll();\n        return this.SendResponseData(ServiceAreaListData);\n    }\n\n    @Get('ById/:Id')\n    async ById(@Param('Id') Id: string) {\n        const ServiceAreaData = await this._ServiceAreaService.GetById(Id);\n        return this.SendResponseData(ServiceAreaData);\n    }\n\n    @Post('Insert')\n    async Insert(@Body() ServiceAreaData: ServiceAreaModel, @CurrentUser() UserId: string, @UserIp() UserIp: string) {\n        await this._ServiceAreaService.Insert(ServiceAreaData, UserId, UserIp);\n        return this.SendResponse(ResponseEnum.Success, ResponseEnum.Created);\n    }\n\n    @Put('Update/:Id')\n    async Update(@Param('Id') Id: string, @Body() ServiceAreaData: ServiceAreaModel, @CurrentUser() UserId: string, @UserIp() UserIp: string) {\n        await this._ServiceAreaService.Update(Id, ServiceAreaData, UserId, UserIp);\n        return this.SendResponse(ResponseEnum.Success, ResponseEnum.Updated);\n    }\n\n    @Delete('Delete/:Id')\n    async Delete(@Param('Id') Id: string, @UserIp() UserIp: string) {\n        await this._ServiceAreaService.Delete(Id, UserIp);\n        return this.SendResponse(ResponseEnum.Success, ResponseEnum.Deleted);\n    }\n}\n"],"names":["ServiceAreaController","JWTAuthController","List","ServiceAreaListData","_ServiceAreaService","GetAll","SendResponseData","ById","Id","ServiceAreaData","GetById","Insert","UserId","UserIp","SendResponse","ResponseEnum","Success","Created","Update","Updated","Delete","Deleted","path","version"],"mappings":";;;;+BAYaA;;;eAAAA;;;wBAZmD;8BAC5B;yBACZ;8BACK;mCACK;oCACC;kCACF;;;;;;;;;;;;;;;AAM1B,IAAA,AAAMA,wBAAN,MAAMA,8BAA8BC,oCAAiB;IAMxD,MACMC,OAAO;QACT,MAAMC,sBAAsB,MAAM,IAAI,CAACC,mBAAmB,CAACC,MAAM;QACjE,OAAO,IAAI,CAACC,gBAAgB,CAACH;IACjC;IAEA,MACMI,KAAK,AAAaC,EAAU,EAAE;QAChC,MAAMC,kBAAkB,MAAM,IAAI,CAACL,mBAAmB,CAACM,OAAO,CAACF;QAC/D,OAAO,IAAI,CAACF,gBAAgB,CAACG;IACjC;IAEA,MACME,OAAO,AAAQF,eAAiC,EAAE,AAAeG,MAAc,EAAE,AAAUC,MAAc,EAAE;QAC7G,MAAM,IAAI,CAACT,mBAAmB,CAACO,MAAM,CAACF,iBAAiBG,QAAQC;QAC/D,OAAO,IAAI,CAACC,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAED,0BAAY,CAACE,OAAO;IACvE;IAEA,MACMC,OAAO,AAAaV,EAAU,EAAE,AAAQC,eAAiC,EAAE,AAAeG,MAAc,EAAE,AAAUC,MAAc,EAAE;QACtI,MAAM,IAAI,CAACT,mBAAmB,CAACc,MAAM,CAACV,IAAIC,iBAAiBG,QAAQC;QACnE,OAAO,IAAI,CAACC,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAED,0BAAY,CAACI,OAAO;IACvE;IAEA,MACMC,OAAO,AAAaZ,EAAU,EAAE,AAAUK,MAAc,EAAE;QAC5D,MAAM,IAAI,CAACT,mBAAmB,CAACgB,MAAM,CAACZ,IAAIK;QAC1C,OAAO,IAAI,CAACC,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAED,0BAAY,CAACM,OAAO;IACvE;IAhCA,YAAY,AAAQjB,mBAAuC,CAAE;QACzD,KAAK,SADWA,sBAAAA;IAEpB;AA+BJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QArCckB,MAAM;QAAeC,SAAS"}