{"version":3,"sources":["../../../src/Controller/CodeMove/Driver.controller.ts"],"sourcesContent":["import { Body, Controller, Delete, Get, Param, Post, Put } from '@nestjs/common';\nimport { CurrentUser, UserIp } from '@Helper/Common.helper';\nimport { ApiTags } from '@nestjs/swagger';\nimport { ResponseEnum } from '@Helper/Enum/ResponseEnum';\nimport { JWTAuthController } from '@Controller/JWTAuth.controller';\nimport { DriverService } from '@Root/Service/CodeMove/Driver.service';\nimport { DriverModel } from '@Model/CodeMove/Driver.model';\n\n@Controller({ path: \"Driver\", version: '1' })\n@ApiTags(\"Driver\")\nexport class DriverController extends JWTAuthController {\n\n    constructor(private _DriverService: DriverService) {\n        super();\n    }\n\n    @Get('List')\n    async List() {\n        const data = await this._DriverService.GetAll();\n        return this.SendResponseData(data);\n    }\n\n    @Get('ById/:Id')\n    async ById(@Param('Id') Id: string) {\n        const data = await this._DriverService.GetById(Id);\n        return this.SendResponseData(data);\n    }\n\n    @Post('Insert')\n    async Insert(@Body() DriverData: DriverModel, @CurrentUser() UserId: string, @UserIp() UserIp: string) {\n        await this._DriverService.Insert(DriverData, UserId, UserIp);\n        return this.SendResponse(ResponseEnum.Success, ResponseEnum.Created);\n    }\n\n    @Put('Update/:Id')\n    async Update(@Param('Id') Id: string, @Body() DriverData: DriverModel, @CurrentUser() UserId: string, @UserIp() UserIp: string) {\n        await this._DriverService.Update(Id, DriverData, UserId, UserIp);\n        return this.SendResponse(ResponseEnum.Success, ResponseEnum.Updated);\n    }\n\n    @Delete('Delete/:Id')\n    async Delete(@Param('Id') Id: string, @UserIp() UserIp: string) {\n        await this._DriverService.Delete(Id, UserIp);\n        return this.SendResponse(ResponseEnum.Success, ResponseEnum.Deleted);\n    }\n}\n"],"names":["DriverController","JWTAuthController","List","data","_DriverService","GetAll","SendResponseData","ById","Id","GetById","Insert","DriverData","UserId","UserIp","SendResponse","ResponseEnum","Success","Created","Update","Updated","Delete","Deleted","path","version"],"mappings":";;;;+BAUaA;;;eAAAA;;;wBAVmD;8BAC5B;yBACZ;8BACK;mCACK;+BACJ;6BACF;;;;;;;;;;;;;;;AAIrB,IAAA,AAAMA,mBAAN,MAAMA,yBAAyBC,oCAAiB;IAMnD,MACMC,OAAO;QACT,MAAMC,OAAO,MAAM,IAAI,CAACC,cAAc,CAACC,MAAM;QAC7C,OAAO,IAAI,CAACC,gBAAgB,CAACH;IACjC;IAEA,MACMI,KAAK,AAAaC,EAAU,EAAE;QAChC,MAAML,OAAO,MAAM,IAAI,CAACC,cAAc,CAACK,OAAO,CAACD;QAC/C,OAAO,IAAI,CAACF,gBAAgB,CAACH;IACjC;IAEA,MACMO,OAAO,AAAQC,UAAuB,EAAE,AAAeC,MAAc,EAAE,AAAUC,MAAc,EAAE;QACnG,MAAM,IAAI,CAACT,cAAc,CAACM,MAAM,CAACC,YAAYC,QAAQC;QACrD,OAAO,IAAI,CAACC,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAED,0BAAY,CAACE,OAAO;IACvE;IAEA,MACMC,OAAO,AAAaV,EAAU,EAAE,AAAQG,UAAuB,EAAE,AAAeC,MAAc,EAAE,AAAUC,MAAc,EAAE;QAC5H,MAAM,IAAI,CAACT,cAAc,CAACc,MAAM,CAACV,IAAIG,YAAYC,QAAQC;QACzD,OAAO,IAAI,CAACC,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAED,0BAAY,CAACI,OAAO;IACvE;IAEA,MACMC,OAAO,AAAaZ,EAAU,EAAE,AAAUK,MAAc,EAAE;QAC5D,MAAM,IAAI,CAACT,cAAc,CAACgB,MAAM,CAACZ,IAAIK;QACrC,OAAO,IAAI,CAACC,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAED,0BAAY,CAACM,OAAO;IACvE;IAhCA,YAAY,AAAQjB,cAA6B,CAAE;QAC/C,KAAK,SADWA,iBAAAA;IAEpB;AA+BJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QArCckB,MAAM;QAAUC,SAAS"}