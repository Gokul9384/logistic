{"version":3,"sources":["../../../src/Controller/Admin/City.controller.ts"],"sourcesContent":["import { Body, Controller, Delete, Get, Param, Post, Put } from '@nestjs/common';\r\nimport { CurrentUser, UserIp } from '@Helper/Common.helper';\r\nimport { ApiTags } from '@nestjs/swagger';\r\nimport { ResponseEnum } from '@Helper/Enum/ResponseEnum';\r\nimport { JWTAuthController } from '@Controller/JWTAuth.controller';\r\nimport { CityService } from '@Root/Service/Admin/City.service';\r\nimport { CityModel } from '@Model/Admin/City.model';\r\n\r\n\r\n@Controller({ path: \"City\", version: '1' })\r\n@ApiTags(\"City\")\r\nexport class CityController extends JWTAuthController {\r\n\r\n  constructor(private _CityService: CityService) {\r\n    super()\r\n  }\r\n\r\n  @Get('List')\r\n  async List() {\r\n    const CityListData = await this._CityService.GetAll();\r\n    return this.SendResponseData(CityListData);\r\n  }\r\n\r\n  @Get('ById/:Id')\r\n  async ById(@Param('Id') Id: string) {\r\n    const CityData = await this._CityService.GetById(Id);\r\n    return this.SendResponseData(CityData);\r\n  }\r\n\r\n  @Post('Insert')\r\n  async Insert(@Body() CityData: CityModel, @CurrentUser() UserId: string, @UserIp() UserIp: string) {\r\n    await this._CityService.Insert(CityData, UserId, UserIp);\r\n    return this.SendResponse(ResponseEnum.Success, ResponseEnum.Created);\r\n  }\r\n\r\n  @Put('Update/:Id')\r\n  async Update(@Param('Id') Id: string, @Body() CityData: CityModel, @CurrentUser() UserId: string, @UserIp() UserIp: string) {\r\n    await this._CityService.Update(Id, CityData, UserId, UserIp);\r\n    return this.SendResponse(ResponseEnum.Success, ResponseEnum.Updated);\r\n  }\r\n\r\n  @Delete('Delete/:Id')\r\n  async Delete(@Param('Id') Id: string, @UserIp() UserIp: string) {\r\n    await this._CityService.Delete(Id, UserIp);\r\n    return this.SendResponse(ResponseEnum.Success, ResponseEnum.Deleted);\r\n  }\r\n}\r\n"],"names":["CityController","JWTAuthController","List","CityListData","_CityService","GetAll","SendResponseData","ById","Id","CityData","GetById","Insert","UserId","UserIp","SendResponse","ResponseEnum","Success","Created","Update","Updated","Delete","Deleted","path","version"],"mappings":";;;;+BAWaA;;;eAAAA;;;wBAXmD;8BAC5B;yBACZ;8BACK;mCACK;6BACN;2BACF;;;;;;;;;;;;;;;AAKnB,IAAA,AAAMA,iBAAN,MAAMA,uBAAuBC,oCAAiB;IAMnD,MACMC,OAAO;QACX,MAAMC,eAAe,MAAM,IAAI,CAACC,YAAY,CAACC,MAAM;QACnD,OAAO,IAAI,CAACC,gBAAgB,CAACH;IAC/B;IAEA,MACMI,KAAK,AAAaC,EAAU,EAAE;QAClC,MAAMC,WAAW,MAAM,IAAI,CAACL,YAAY,CAACM,OAAO,CAACF;QACjD,OAAO,IAAI,CAACF,gBAAgB,CAACG;IAC/B;IAEA,MACME,OAAO,AAAQF,QAAmB,EAAE,AAAeG,MAAc,EAAE,AAAUC,MAAc,EAAE;QACjG,MAAM,IAAI,CAACT,YAAY,CAACO,MAAM,CAACF,UAAUG,QAAQC;QACjD,OAAO,IAAI,CAACC,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAED,0BAAY,CAACE,OAAO;IACrE;IAEA,MACMC,OAAO,AAAaV,EAAU,EAAE,AAAQC,QAAmB,EAAE,AAAeG,MAAc,EAAE,AAAUC,MAAc,EAAE;QAC1H,MAAM,IAAI,CAACT,YAAY,CAACc,MAAM,CAACV,IAAIC,UAAUG,QAAQC;QACrD,OAAO,IAAI,CAACC,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAED,0BAAY,CAACI,OAAO;IACrE;IAEA,MACMC,OAAO,AAAaZ,EAAU,EAAE,AAAUK,MAAc,EAAE;QAC9D,MAAM,IAAI,CAACT,YAAY,CAACgB,MAAM,CAACZ,IAAIK;QACnC,OAAO,IAAI,CAACC,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAED,0BAAY,CAACM,OAAO;IACrE;IAhCA,YAAY,AAAQjB,YAAyB,CAAE;QAC7C,KAAK,SADaA,eAAAA;IAEpB;AA+BF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QArCckB,MAAM;QAAQC,SAAS"}