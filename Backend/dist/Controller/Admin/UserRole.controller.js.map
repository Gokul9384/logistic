{"version":3,"sources":["../../../src/Controller/Admin/UserRole.controller.ts"],"sourcesContent":["import { Body, Controller, Delete, Get, Param, Post, Put } from '@nestjs/common';\r\nimport { CurrentUser, UserIp } from '@Helper/Common.helper';\r\nimport { ApiTags } from '@nestjs/swagger';\r\nimport { UserRoleService } from '@Service/Admin/UserRole.service';\r\nimport { ResponseEnum } from '@Helper/Enum/ResponseEnum';\r\nimport { UserRoleModel } from '@Model/Admin/UserRole.model';\r\nimport { JWTAuthController } from '@Controller/JWTAuth.controller';\r\n\r\n@Controller({ path: \"UserRole\", version: '1' })\r\n@ApiTags(\"User Role\")\r\nexport class UserRoleController extends JWTAuthController {\r\n\r\n  constructor(private _UserRoleService: UserRoleService) {\r\n    super()\r\n  }\r\n\r\n  @Get('List')\r\n  async List() {\r\n    const UserRoleListData = await this._UserRoleService.GetAllExpectSuperAdmin();\r\n    return this.SendResponseData(UserRoleListData);\r\n  }\r\n\r\n  @Get('ById/:Id')\r\n  async ById(@Param('Id') Id: string) {\r\n    const UserRoleData = await this._UserRoleService.GetById(Id);\r\n    return this.SendResponseData(UserRoleData);\r\n  }\r\n\r\n  @Post('Insert')\r\n  async Insert(@Body() UserRoleData: UserRoleModel, @CurrentUser() UserId: string, @UserIp() UserIp: string) {\r\n    await this._UserRoleService.Insert(UserRoleData, UserId, UserIp);\r\n    return this.SendResponse(ResponseEnum.Success, ResponseEnum.Created);\r\n  }\r\n\r\n  @Put('Update/:Id')\r\n  async Update(@Param('Id') Id: string, @Body() UserRoleData: UserRoleModel, @CurrentUser() UserId: string, @UserIp() UserIp: string) {\r\n    await this._UserRoleService.Update(Id, UserRoleData, UserId, UserIp);\r\n    return this.SendResponse(ResponseEnum.Success, ResponseEnum.Updated);\r\n  }\r\n\r\n  @Delete('Delete/:Id')\r\n  async Delete(@Param('Id') Id: string, @UserIp() UserIp: string) {\r\n    await this._UserRoleService.Delete(Id, UserIp);\r\n    return this.SendResponse(ResponseEnum.Success, ResponseEnum.Deleted);\r\n  }\r\n}\r\n"],"names":["UserRoleController","JWTAuthController","List","UserRoleListData","_UserRoleService","GetAllExpectSuperAdmin","SendResponseData","ById","Id","UserRoleData","GetById","Insert","UserId","UserIp","SendResponse","ResponseEnum","Success","Created","Update","Updated","Delete","Deleted","path","version"],"mappings":";;;;+BAUaA;;;eAAAA;;;wBAVmD;8BAC5B;yBACZ;iCACQ;8BACH;+BACC;mCACI;;;;;;;;;;;;;;;AAI3B,IAAA,AAAMA,qBAAN,MAAMA,2BAA2BC,oCAAiB;IAMvD,MACMC,OAAO;QACX,MAAMC,mBAAmB,MAAM,IAAI,CAACC,gBAAgB,CAACC,sBAAsB;QAC3E,OAAO,IAAI,CAACC,gBAAgB,CAACH;IAC/B;IAEA,MACMI,KAAK,AAAaC,EAAU,EAAE;QAClC,MAAMC,eAAe,MAAM,IAAI,CAACL,gBAAgB,CAACM,OAAO,CAACF;QACzD,OAAO,IAAI,CAACF,gBAAgB,CAACG;IAC/B;IAEA,MACME,OAAO,AAAQF,YAA2B,EAAE,AAAeG,MAAc,EAAE,AAAUC,MAAc,EAAE;QACzG,MAAM,IAAI,CAACT,gBAAgB,CAACO,MAAM,CAACF,cAAcG,QAAQC;QACzD,OAAO,IAAI,CAACC,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAED,0BAAY,CAACE,OAAO;IACrE;IAEA,MACMC,OAAO,AAAaV,EAAU,EAAE,AAAQC,YAA2B,EAAE,AAAeG,MAAc,EAAE,AAAUC,MAAc,EAAE;QAClI,MAAM,IAAI,CAACT,gBAAgB,CAACc,MAAM,CAACV,IAAIC,cAAcG,QAAQC;QAC7D,OAAO,IAAI,CAACC,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAED,0BAAY,CAACI,OAAO;IACrE;IAEA,MACMC,OAAO,AAAaZ,EAAU,EAAE,AAAUK,MAAc,EAAE;QAC9D,MAAM,IAAI,CAACT,gBAAgB,CAACgB,MAAM,CAACZ,IAAIK;QACvC,OAAO,IAAI,CAACC,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAED,0BAAY,CAACM,OAAO;IACrE;IAhCA,YAAY,AAAQjB,gBAAiC,CAAE;QACrD,KAAK,SADaA,mBAAAA;IAEpB;AA+BF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QArCckB,MAAM;QAAYC,SAAS"}