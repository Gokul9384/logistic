{"version":3,"sources":["../../../src/Controller/Admin/User.controller.ts"],"sourcesContent":["import { Body, Controller, Get, Param, Patch, Post, Put } from '@nestjs/common';\r\nimport { CurrentUser, UserIp } from '@Helper/Common.helper';\r\nimport { ApiTags } from '@nestjs/swagger';\r\nimport { UserService } from '@Service/Admin/User.service';\r\nimport { ResponseEnum } from '@Helper/Enum/ResponseEnum';\r\nimport { ChangePasswordModel, UserModel } from '@Model/Admin/User.model';\r\nimport { JWTAuthController } from '@Controller/JWTAuth.controller';\r\n\r\n@Controller({ path: \"User\", version: '1' })\r\n@ApiTags(\"User\")\r\nexport class UserController extends JWTAuthController {\r\n\r\n  constructor(\r\n    private _UserService: UserService,\r\n  ) {\r\n    super()\r\n  }\r\n\r\n  @Get('List')\r\n  async List() {\r\n    const UserListData = await this._UserService.GetAllExpectSuperAdmin();\r\n    return this.SendResponseData(UserListData);\r\n  }\r\n\r\n  @Get('ById/:Id')\r\n  async ById(@Param('Id') Id: string) {\r\n    const UserData = await this._UserService.GetById(Id);\r\n    return this.SendResponseData(UserData);\r\n  }\r\n\r\n  @Post('Insert')\r\n  async Insert(@Body() UserData: UserModel, @CurrentUser() UserId: string, @UserIp() UserIp: string) {\r\n    const ResultData = await this._UserService.Insert(UserData, UserId, UserIp);\r\n    return this.SendResponse(ResponseEnum.Success, ResponseEnum.Created, ResultData.id);\r\n  }\r\n\r\n  @Put('Update/:Id')\r\n  async Update(@Param('Id') Id: string, @Body() UserData: UserModel, @CurrentUser() UserId: string, @UserIp() UserIp: string) {\r\n    await this._UserService.Update(Id, UserData, UserId, UserIp);\r\n    return this.SendResponse(ResponseEnum.Success, ResponseEnum.Updated);\r\n  }\r\n\r\n  @Patch('SuspendOrActivate/:Id')\r\n  async SuspendOrActivate(@Param('Id') id: string, @CurrentUser() UserId: string, @UserIp() UserIp: string) {\r\n    const UserData = await this._UserService.SuspendOrActivate(id, UserId, UserIp);\r\n    if (UserData.status == true) {\r\n      return this.SendResponse(ResponseEnum.Success, ResponseEnum.Activated);\r\n    }\r\n    else {\r\n      return this.SendResponse(ResponseEnum.Success, ResponseEnum.Suspended);\r\n    }\r\n  }\r\n\r\n  @Post('ChangePassword')\r\n  async ChangePassword(@Body() ChangePasswordData: ChangePasswordModel, @CurrentUser() UserId: string) {\r\n    await this._UserService.ChangePassword(UserId, ChangePasswordData);\r\n    return this.SendResponse(ResponseEnum.Success, \"Password changed successfully\");\r\n  }\r\n\r\n  @Put('ResetPassword/:Id')\r\n  async ResetPassword(@Param('UserId') Id: string, @Body() UserData: UserModel, @CurrentUser() UserId: string, @UserIp() UserIp: string) {\r\n    await this._UserService.UserResetPassword(Id, UserData, UserId, UserIp);\r\n    return this.SendResponse(ResponseEnum.Success, ResponseEnum.Reset);\r\n  }\r\n\r\n  @Post('UnLockPassword')\r\n  async UnLockPassword(@CurrentUser() UserId: string, @Body() UserData: any) {\r\n    await this._UserService.UserUnLock(UserId, UserData);\r\n    return this.SendResponse(ResponseEnum.Success, \"UnLocked successfully\");\r\n  }\r\n\r\n\r\n}\r\n\r\n"],"names":["UserController","JWTAuthController","List","UserListData","_UserService","GetAllExpectSuperAdmin","SendResponseData","ById","Id","UserData","GetById","Insert","UserId","UserIp","ResultData","SendResponse","ResponseEnum","Success","Created","id","Update","Updated","SuspendOrActivate","status","Activated","Suspended","ChangePassword","ChangePasswordData","ResetPassword","UserResetPassword","Reset","UnLockPassword","UserUnLock","path","version"],"mappings":";;;;+BAUaA;;;eAAAA;;;wBAVkD;8BAC3B;yBACZ;6BACI;8BACC;2BACkB;mCACb;;;;;;;;;;;;;;;AAI3B,IAAA,AAAMA,iBAAN,MAAMA,uBAAuBC,oCAAiB;IAQnD,MACMC,OAAO;QACX,MAAMC,eAAe,MAAM,IAAI,CAACC,YAAY,CAACC,sBAAsB;QACnE,OAAO,IAAI,CAACC,gBAAgB,CAACH;IAC/B;IAEA,MACMI,KAAK,AAAaC,EAAU,EAAE;QAClC,MAAMC,WAAW,MAAM,IAAI,CAACL,YAAY,CAACM,OAAO,CAACF;QACjD,OAAO,IAAI,CAACF,gBAAgB,CAACG;IAC/B;IAEA,MACME,OAAO,AAAQF,QAAmB,EAAE,AAAeG,MAAc,EAAE,AAAUC,MAAc,EAAE;QACjG,MAAMC,aAAa,MAAM,IAAI,CAACV,YAAY,CAACO,MAAM,CAACF,UAAUG,QAAQC;QACpE,OAAO,IAAI,CAACE,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAED,0BAAY,CAACE,OAAO,EAAEJ,WAAWK,EAAE;IACpF;IAEA,MACMC,OAAO,AAAaZ,EAAU,EAAE,AAAQC,QAAmB,EAAE,AAAeG,MAAc,EAAE,AAAUC,MAAc,EAAE;QAC1H,MAAM,IAAI,CAACT,YAAY,CAACgB,MAAM,CAACZ,IAAIC,UAAUG,QAAQC;QACrD,OAAO,IAAI,CAACE,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAED,0BAAY,CAACK,OAAO;IACrE;IAEA,MACMC,kBAAkB,AAAaH,EAAU,EAAE,AAAeP,MAAc,EAAE,AAAUC,MAAc,EAAE;QACxG,MAAMJ,WAAW,MAAM,IAAI,CAACL,YAAY,CAACkB,iBAAiB,CAACH,IAAIP,QAAQC;QACvE,IAAIJ,SAASc,MAAM,IAAI,MAAM;YAC3B,OAAO,IAAI,CAACR,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAED,0BAAY,CAACQ,SAAS;QACvE,OACK;YACH,OAAO,IAAI,CAACT,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAED,0BAAY,CAACS,SAAS;QACvE;IACF;IAEA,MACMC,eAAe,AAAQC,kBAAuC,EAAE,AAAef,MAAc,EAAE;QACnG,MAAM,IAAI,CAACR,YAAY,CAACsB,cAAc,CAACd,QAAQe;QAC/C,OAAO,IAAI,CAACZ,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAE;IACjD;IAEA,MACMW,cAAc,AAAiBpB,EAAU,EAAE,AAAQC,QAAmB,EAAE,AAAeG,MAAc,EAAE,AAAUC,MAAc,EAAE;QACrI,MAAM,IAAI,CAACT,YAAY,CAACyB,iBAAiB,CAACrB,IAAIC,UAAUG,QAAQC;QAChE,OAAO,IAAI,CAACE,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAED,0BAAY,CAACc,KAAK;IACnE;IAEA,MACMC,eAAe,AAAenB,MAAc,EAAE,AAAQH,QAAa,EAAE;QACzE,MAAM,IAAI,CAACL,YAAY,CAAC4B,UAAU,CAACpB,QAAQH;QAC3C,OAAO,IAAI,CAACM,YAAY,CAACC,0BAAY,CAACC,OAAO,EAAE;IACjD;IAzDA,YACE,AAAQb,YAAyB,CACjC;QACA,KAAK,SAFGA,eAAAA;IAGV;AAwDF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAhEc6B,MAAM;QAAQC,SAAS"}