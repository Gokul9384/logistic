{"version":3,"sources":["../../src/Helper/Logging.interceptor.ts"],"sourcesContent":["import { Injectable, NestInterceptor, ExecutionContext, CallHandler, Logger } from '@nestjs/common';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class LoggingInterceptor implements NestInterceptor {\r\n  private readonly logger = new Logger(LoggingInterceptor.name);\r\n  constructor() { }\r\n  intercept(context: ExecutionContext, next: CallHandler): Observable<any> {\r\n    const now = Date.now();\r\n    const request = context.switchToHttp().getRequest<Response>();\r\n    this.logger.log(request.url + \" - Called\")\r\n    return next\r\n      .handle()\r\n      .pipe(\r\n        tap((data) => {\r\n          this.logger.log(request.url + \" - finished - \" + `${Date.now() - now}ms`)\r\n        })\r\n      );\r\n  }\r\n}\r\n"],"names":["LoggingInterceptor","intercept","context","next","now","Date","request","switchToHttp","getRequest","logger","log","url","handle","pipe","tap","data","Logger","name"],"mappings":";;;;+BAKaA;;;eAAAA;;;wBALsE;2BAE/D;;;;;;;;;;AAGb,IAAA,AAAMA,qBAAN,MAAMA;IAGXC,UAAUC,OAAyB,EAAEC,IAAiB,EAAmB;QACvE,MAAMC,MAAMC,KAAKD,GAAG;QACpB,MAAME,UAAUJ,QAAQK,YAAY,GAAGC,UAAU;QACjD,IAAI,CAACC,MAAM,CAACC,GAAG,CAACJ,QAAQK,GAAG,GAAG;QAC9B,OAAOR,KACJS,MAAM,GACNC,IAAI,CACHC,IAAAA,cAAG,EAAC,CAACC;YACH,IAAI,CAACN,MAAM,CAACC,GAAG,CAACJ,QAAQK,GAAG,GAAG,mBAAmB,GAAGN,KAAKD,GAAG,KAAKA,IAAI,EAAE,CAAC;QAC1E;IAEN;IAZA,aAAc;aADGK,SAAS,IAAIO,cAAM,CAAChB,mBAAmBiB,IAAI;IAC5C;AAalB"}