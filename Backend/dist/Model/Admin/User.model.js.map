{"version":3,"sources":["../../../src/Model/Admin/User.model.ts"],"sourcesContent":["import { ApiProperty } from '@nestjs/swagger';\r\nimport { Type } from 'class-transformer';\r\nimport { IsEmail, IsNotEmpty, MinLength, ValidateIf } from 'class-validator';\r\nimport { BaseModel } from '../Base.model';\r\n\r\nexport class UserModel extends BaseModel {\r\n  @IsNotEmpty({ message: 'User role required' })\r\n  @ApiProperty({ required: true })\r\n  @Type(() => String)\r\n  user_role_id: string;\r\n\r\n  @IsNotEmpty({ message: 'First name required' })\r\n  @ApiProperty({ required: true })\r\n  @Type(() => String)\r\n  first_name: string;\r\n\r\n  @ApiProperty({ required: false })\r\n  @Type(() => String)\r\n  last_name: string;\r\n\r\n  @IsEmail({}, { message: 'Invaild Email format' })\r\n  @IsNotEmpty({ message: 'Email required' })\r\n  @ApiProperty({ required: true })\r\n  @Type(() => String)\r\n  email: string;\r\n\r\n  @ValidateIf((o: UserModel) => !(o.id > \"0\"))\r\n  @IsNotEmpty({ message: 'Password required' })\r\n  @ApiProperty({ required: true })\r\n  @Type(() => String)\r\n  password: string;\r\n\r\n  @ApiProperty({ required: false })\r\n  @Type(() => String)\r\n  mobile: string;\r\n\r\n}\r\n\r\nexport class ForgotPasswordModel {\r\n  @IsNotEmpty({ message: 'Email required' })\r\n  @IsEmail({}, { message: 'Invaild Email format' })\r\n  @ApiProperty({ required: true })\r\n  @Type(() => String)\r\n  email: string;\r\n}\r\n\r\nexport class ResetPasswordModel {\r\n  @IsNotEmpty({ message: 'User id required' })\r\n  @ApiProperty({ required: true })\r\n  @Type(() => String)\r\n  user_id: string;\r\n\r\n  @IsNotEmpty({ message: 'Reset OTP required' })\r\n  @ApiProperty({ required: true })\r\n  @Type(() => Number)\r\n  reset_otp: number;\r\n\r\n  @IsNotEmpty({ message: 'Password required' })\r\n  @MinLength(6, {\r\n    message: 'Password length mininum 6 characters',\r\n  })\r\n  @ApiProperty({ required: true })\r\n  @Type(() => String)\r\n  password: string;\r\n}\r\n\r\nexport class ChangePasswordModel {\r\n\r\n  @IsNotEmpty({ message: 'Password required' })\r\n  @MinLength(6, {\r\n    message: 'Password length mininum 6 characters',\r\n  })\r\n  @ApiProperty({ required: true })\r\n  @Type(() => String)\r\n  old_password: string;\r\n\r\n  @IsNotEmpty({ message: 'Password required' })\r\n  @MinLength(6, {\r\n    message: 'Password length mininum 6 characters',\r\n  })\r\n  @ApiProperty({ required: true })\r\n  @Type(() => String)\r\n  password: string;\r\n}\r\n\r\n"],"names":["ChangePasswordModel","ForgotPasswordModel","ResetPasswordModel","UserModel","BaseModel","message","required","String","o","id","Number"],"mappings":";;;;;;;;;;;QAkEaA;eAAAA;;QA5BAC;eAAAA;;QAQAC;eAAAA;;QAzCAC;eAAAA;;;yBALe;kCACP;gCACsC;2BACjC;;;;;;;;;;AAEnB,IAAA,AAAMA,YAAN,MAAMA,kBAAkBC,oBAAS;AA+BxC;;;QA9BgBC,SAAS;;;QACRC,UAAU;;oCACbC;;;;;QAGEF,SAAS;;;QACRC,UAAU;;oCACbC;;;;;QAGGD,UAAU;;oCACbC;;;;;QAGGF,SAAS;;;QACVA,SAAS;;;QACRC,UAAU;;oCACbC;;;;qCAGCC,IAAiB,CAAEA,CAAAA,EAAEC,EAAE,GAAG,GAAE;;QAC3BJ,SAAS;;;QACRC,UAAU;;oCACbC;;;;;QAGGD,UAAU;;oCACbC;;;AAKP,IAAA,AAAMN,sBAAN,MAAMA;AAMb;;;QALgBI,SAAS;;;QACRA,SAAS;;;QACTC,UAAU;;oCACbC;;;AAIP,IAAA,AAAML,qBAAN,MAAMA;AAkBb;;;QAjBgBG,SAAS;;;QACRC,UAAU;;oCACbC;;;;;QAGEF,SAAS;;;QACRC,UAAU;;oCACbI;;;;;QAGEL,SAAS;;;QAErBA,SAAS;;;QAEIC,UAAU;;oCACbC;;;AAIP,IAAA,AAAMP,sBAAN,MAAMA;AAiBb;;;QAfgBK,SAAS;;;QAErBA,SAAS;;;QAEIC,UAAU;;oCACbC;;;;;QAGEF,SAAS;;;QAErBA,SAAS;;;QAEIC,UAAU;;oCACbC"}