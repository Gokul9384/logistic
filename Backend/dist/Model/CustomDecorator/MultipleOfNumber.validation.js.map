{"version":3,"sources":["../../../src/Model/CustomDecorator/MultipleOfNumber.validation.ts"],"sourcesContent":["import { registerDecorator, ValidationArguments, ValidationOptions, ValidatorConstraint, ValidatorConstraintInterface } from \"class-validator\";\r\n\r\nexport function IsMultipleOfNumber(Field: number, validationOptions?: ValidationOptions) {\r\n  return function (object: Object, propertyName: string) {\r\n    registerDecorator({\r\n      target: object.constructor,\r\n      propertyName: propertyName,\r\n      options: validationOptions,\r\n      constraints: [{\r\n        Field: Field\r\n      }\r\n      ],\r\n      validator: MultipleOfNumberThenValidation,\r\n    });\r\n  };\r\n}\r\n@ValidatorConstraint({ async: true })\r\nexport class MultipleOfNumberThenValidation implements ValidatorConstraintInterface {\r\n  async validate(numb: number, args: ValidationArguments) {\r\n    if (Number(args.constraints[0].Field)) {\r\n      if (Number(numb)) {\r\n        return (Number(numb) % Number(args.constraints[0].Field)) == 0;\r\n      }\r\n      else {\r\n        return false;\r\n      }\r\n    }\r\n    else {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n"],"names":["IsMultipleOfNumber","MultipleOfNumberThenValidation","Field","validationOptions","object","propertyName","registerDecorator","target","options","constraints","validator","validate","numb","args","Number","async"],"mappings":";;;;;;;;;;;QAEgBA;eAAAA;;QAeHC;eAAAA;;;gCAjBgH;;;;;;;AAEtH,SAASD,mBAAmBE,KAAa,EAAEC,iBAAqC;IACrF,OAAO,SAAUC,MAAc,EAAEC,YAAoB;QACnDC,IAAAA,iCAAiB,EAAC;YAChBC,QAAQH,OAAO,WAAW;YAC1BC,cAAcA;YACdG,SAASL;YACTM,aAAa;gBAAC;oBACZP,OAAOA;gBACT;aACC;YACDQ,WAAWT;QACb;IACF;AACF;AAEO,IAAA,AAAMA,iCAAN,MAAMA;IACX,MAAMU,SAASC,IAAY,EAAEC,IAAyB,EAAE;QACtD,IAAIC,OAAOD,KAAKJ,WAAW,CAAC,EAAE,CAACP,KAAK,GAAG;YACrC,IAAIY,OAAOF,OAAO;gBAChB,OAAO,AAACE,OAAOF,QAAQE,OAAOD,KAAKJ,WAAW,CAAC,EAAE,CAACP,KAAK,KAAM;YAC/D,OACK;gBACH,OAAO;YACT;QACF,OACK;YACH,OAAO;QACT;IACF;AACF;;;QAfuBa,OAAO"}