{"version":3,"sources":["../../../src/Service/CodeMove/CustomerDashboard.service.ts"],"sourcesContent":["import { Injectable } from \"@nestjs/common\";\nimport { DataSource } from \"typeorm\";\n\n@Injectable()\nexport class CustomerDashboardService {\n    constructor(private dataSource: DataSource) { }\n\n    async getStats(customerId: string) {\n        const customerStats = await this.dataSource.query(\n            `   \n            SELECT \n    SUM(CASE WHEN r.requirement_status = 'Accepted' THEN 1 ELSE 0 END) AS accepted_requirements,\n    SUM(CASE WHEN q.quote_status = 'Sent' THEN 1 ELSE 0 END) AS pending_quotes,\n    SUM(CASE WHEN b.booking_status = 'Confirmed' THEN 1 ELSE 0 END) AS active_bookings,\n    SUM(CASE WHEN d.delivery_status = 'Assigned' THEN 1 ELSE 0 END) AS pending_deliveries\nFROM customer c\nLEFT JOIN \\`order\\` o ON o.customer_id = c.id\nLEFT JOIN requirement r ON r.order_id = o.id\nLEFT JOIN quote q ON q.requirement_id = r.id\nLEFT JOIN bookings b ON b.quote_id = q.id\nLEFT JOIN delivery d ON d.order_id = o.id\n            WHERE c.id = ?\n            `,\n            [customerId]\n        );\n\n        return customerStats?.[0] || {\n            accepted_requirements: 0,\n            pending_quotes: 0,\n            active_bookings: 0,\n            pending_deliveries: 0\n        };\n    }\n\n    async getRecentOrders(customerId: string, startDate?: string, endDate?: string) {\n        let query = `\n            SELECT \n                o.id, \n                o.order_number, \n                o.material, \n                o.source_location, \n                o.destination_location, \n                o.expected_date, \n                o.order_status, \n                o.created_on\n            FROM \\`order\\` o\n            WHERE o.customer_id = ?\n        `;\n\n        const params: any[] = [customerId];\n\n        if (startDate && endDate) {\n            query += ` AND DATE(o.created_on) BETWEEN ? AND ? `;\n            params.push(startDate, endDate);\n        }\n\n        query += ` ORDER BY o.created_on DESC LIMIT 10`;\n\n        return this.dataSource.query(query, params);\n    }\n\n\n    async getDeliveryTracking(customerId: string, startDate?: string) {\n        let query = `\n        SELECT \n            o.order_number,\n            o.order_date,\n            o.source_location,\n            o.destination_location,\n            b.booking_number,\n            d.delivery_status,\n            d.start_time,\n            d.end_time,\n            d.assigned_time,\n            d.in_transit_time,\n            drv.name AS driver_name,\n            drv.mobile AS driver_contact\n        FROM \\`order\\` o\n        LEFT JOIN delivery d ON d.order_id = o.id\n        LEFT JOIN bookings b ON b.id = d.booking_id\n        LEFT JOIN driver drv ON drv.id = b.driver_id\n        WHERE o.customer_id = ? \n          AND d.delivery_status IN ('Assigned', 'Started', 'In Transit', 'Delivered')\n    `;\n\n        const params: any[] = [customerId];\n\n        if (startDate) {\n            query += ` AND DATE(o.order_date) = ?`;\n            params.push(startDate);\n        }\n\n        query += ` ORDER BY o.order_date DESC`;\n\n        return this.dataSource.query(query, params);\n    }\n\n\n\n}\n"],"names":["CustomerDashboardService","getStats","customerId","customerStats","dataSource","query","accepted_requirements","pending_quotes","active_bookings","pending_deliveries","getRecentOrders","startDate","endDate","params","push","getDeliveryTracking"],"mappings":";;;;+BAIaA;;;eAAAA;;;wBAJc;yBACA;;;;;;;;;;AAGpB,IAAA,AAAMA,2BAAN,MAAMA;IAGT,MAAMC,SAASC,UAAkB,EAAE;QAC/B,MAAMC,gBAAgB,MAAM,IAAI,CAACC,UAAU,CAACC,KAAK,CAC7C,CAAC;;;;;;;;;;;;;YAaD,CAAC,EACD;YAACH;SAAW;QAGhB,OAAOC,eAAe,CAAC,EAAE,IAAI;YACzBG,uBAAuB;YACvBC,gBAAgB;YAChBC,iBAAiB;YACjBC,oBAAoB;QACxB;IACJ;IAEA,MAAMC,gBAAgBR,UAAkB,EAAES,SAAkB,EAAEC,OAAgB,EAAE;QAC5E,IAAIP,QAAQ,CAAC;;;;;;;;;;;;QAYb,CAAC;QAED,MAAMQ,SAAgB;YAACX;SAAW;QAElC,IAAIS,aAAaC,SAAS;YACtBP,SAAS,CAAC,wCAAwC,CAAC;YACnDQ,OAAOC,IAAI,CAACH,WAAWC;QAC3B;QAEAP,SAAS,CAAC,oCAAoC,CAAC;QAE/C,OAAO,IAAI,CAACD,UAAU,CAACC,KAAK,CAACA,OAAOQ;IACxC;IAGA,MAAME,oBAAoBb,UAAkB,EAAES,SAAkB,EAAE;QAC9D,IAAIN,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;IAoBjB,CAAC;QAEG,MAAMQ,SAAgB;YAACX;SAAW;QAElC,IAAIS,WAAW;YACXN,SAAS,CAAC,2BAA2B,CAAC;YACtCQ,OAAOC,IAAI,CAACH;QAChB;QAEAN,SAAS,CAAC,2BAA2B,CAAC;QAEtC,OAAO,IAAI,CAACD,UAAU,CAACC,KAAK,CAACA,OAAOQ;IACxC;IA1FA,YAAY,AAAQT,UAAsB,CAAE;aAAxBA,aAAAA;IAA0B;AA8FlD"}