{"version":3,"sources":["../../src/Service/Encryption.service.ts"],"sourcesContent":["import { Injectable } from \"@nestjs/common\";\r\nimport { ConfigService } from \"@nestjs/config\";\r\nimport CryptoJS from 'crypto-js';\r\n\r\n@Injectable()\r\nexport class EncryptionService {\r\n  constructor(private _ConfigService: ConfigService) { }\r\n  Decrypt(text: string) {\r\n    const DuplicateKey = CryptoJS.enc.Hex.parse(text);\r\n    const OriginalKey = DuplicateKey.toString(CryptoJS.enc.Base64);\r\n    return CryptoJS.AES.decrypt(OriginalKey, String(this._ConfigService.get(\"Encryption.SecertKey\")),).toString(CryptoJS.enc.Utf8);\r\n  }\r\n\r\n  Encrypt(text: string) {\r\n    const OriginalKey = CryptoJS.AES.encrypt(text, String(this._ConfigService.get(\"Encryption.SecertKey\")),).toString();\r\n    const DuplicateKey = CryptoJS.enc.Base64.parse(OriginalKey);\r\n    return DuplicateKey.toString(CryptoJS.enc.Hex);\r\n  }\r\n\r\n}\r\n"],"names":["EncryptionService","Decrypt","text","DuplicateKey","CryptoJS","enc","Hex","parse","OriginalKey","toString","Base64","AES","decrypt","String","_ConfigService","get","Utf8","Encrypt","encrypt"],"mappings":";;;;+BAKaA;;;eAAAA;;;wBALc;wBACG;iEACT;;;;;;;;;;;;;;;AAGd,IAAA,AAAMA,oBAAN,MAAMA;IAEXC,QAAQC,IAAY,EAAE;QACpB,MAAMC,eAAeC,iBAAQ,CAACC,GAAG,CAACC,GAAG,CAACC,KAAK,CAACL;QAC5C,MAAMM,cAAcL,aAAaM,QAAQ,CAACL,iBAAQ,CAACC,GAAG,CAACK,MAAM;QAC7D,OAAON,iBAAQ,CAACO,GAAG,CAACC,OAAO,CAACJ,aAAaK,OAAO,IAAI,CAACC,cAAc,CAACC,GAAG,CAAC,0BAA2BN,QAAQ,CAACL,iBAAQ,CAACC,GAAG,CAACW,IAAI;IAC/H;IAEAC,QAAQf,IAAY,EAAE;QACpB,MAAMM,cAAcJ,iBAAQ,CAACO,GAAG,CAACO,OAAO,CAAChB,MAAMW,OAAO,IAAI,CAACC,cAAc,CAACC,GAAG,CAAC,0BAA2BN,QAAQ;QACjH,MAAMN,eAAeC,iBAAQ,CAACC,GAAG,CAACK,MAAM,CAACH,KAAK,CAACC;QAC/C,OAAOL,aAAaM,QAAQ,CAACL,iBAAQ,CAACC,GAAG,CAACC,GAAG;IAC/C;IAXA,YAAY,AAAQQ,cAA6B,CAAE;aAA/BA,iBAAAA;IAAiC;AAavD"}