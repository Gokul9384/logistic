{"version":3,"sources":["../../../src/Service/Admin/UserRole.service.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common';\r\nimport { user_role } from '@Database/Table/Admin/user_role';\r\nimport { ResponseEnum } from '@Helper/Enum/ResponseEnum';\r\nimport { UserRoleModel } from '@Model/Admin/UserRole.model';\r\nimport { Not } from 'typeorm';\r\nimport { AuditLogService } from './AuditLog.service';\r\nimport { LogActionEnum } from '@Helper/Enum/AuditLogEnum';\r\nimport { CacheService } from '@Service/Cache.service';\r\nimport { CacheEnum } from '@Helper/Enum/CacheEnum';\r\nimport { UserIp } from '@Root/Helper/Common.helper';\r\n\r\n@Injectable()\r\nexport class UserRoleService {\r\n  constructor(private _AuditLogService: AuditLogService,\r\n    private _CacheService: CacheService) {\r\n  }\r\n\r\n  async GetAll() {\r\n    const ResultData = await this._CacheService.Get(`${CacheEnum.UserRole}:*`);\r\n    if (ResultData.length > 0) {\r\n      return ResultData;\r\n    }\r\n    else {\r\n      const UserRoleList = await user_role.find({ where: { created_by_id: Not('0') } });\r\n      await this._CacheService.Store(`${CacheEnum.UserRole}`, UserRoleList);\r\n      return UserRoleList;\r\n    }\r\n  }\r\n\r\n  async GetAllExpectSuperAdmin() {\r\n    const ResultData = await this._CacheService.Get(`${CacheEnum.UserRole}:*`);\r\n    if (ResultData.length > 0) {\r\n      return ResultData;\r\n    }\r\n    else {\r\n      const UserRoleList = await user_role.find({ where: { created_by_id: Not('0') } });\r\n      await this._CacheService.Store(`${CacheEnum.UserRole}`, UserRoleList);\r\n      return UserRoleList;\r\n    }\r\n  }\r\n\r\n  async GetById(UserRoleId: string) {\r\n    const ResultData = await this._CacheService.Get(`${CacheEnum.UserRole}:${UserRoleId}`);\r\n    if (ResultData.length > 0) {\r\n      return ResultData[0];\r\n    }\r\n    else {\r\n      const UserRoleData = await user_role.findOne({ where: { id: UserRoleId } });\r\n      await this._CacheService.Store(`${CacheEnum.UserRole}:${UserRoleId}`, [UserRoleData]);\r\n      return UserRoleData;\r\n    }\r\n  }\r\n\r\n  async Insert(UserRoleData: UserRoleModel, UserId: string, UserIp: string) {\r\n    const _UserRoleData = new user_role();\r\n    _UserRoleData.name = UserRoleData.name;\r\n    _UserRoleData.code = UserRoleData.code;\r\n    _UserRoleData.landing_page = UserRoleData.landing_page;\r\n    _UserRoleData.permissions = UserRoleData.permissions;\r\n    _UserRoleData.created_by_id = UserId;\r\n    _UserRoleData.created_on = new Date();\r\n    await user_role.insert(_UserRoleData);\r\n    this._AuditLogService.AuditEmitEvent({ PerformedType: user_role.name, ActionType: LogActionEnum.Insert, PrimaryId: [_UserRoleData.id], UserIp: UserIp });\r\n    await this._CacheService.Store(`${CacheEnum.UserRole}`, [_UserRoleData]);\r\n    return _UserRoleData;\r\n  }\r\n\r\n  async Update(Id: string, UserRoleData: UserRoleModel, UserId: string, UserIp: string) {\r\n    const UserRoleUpdateData = await user_role.findOne({ where: { id: Id } });\r\n    if (!UserRoleUpdateData) {\r\n      throw new Error('Record not found')\r\n    }\r\n    UserRoleUpdateData.name = UserRoleData.name;\r\n    UserRoleUpdateData.code = UserRoleData.code;\r\n    UserRoleUpdateData.landing_page = UserRoleData.landing_page;\r\n    UserRoleUpdateData.permissions = UserRoleData.permissions;\r\n    UserRoleUpdateData.updated_by_id = UserId;\r\n    UserRoleUpdateData.updated_on = new Date();\r\n    await user_role.update(Id, UserRoleUpdateData);\r\n    this._AuditLogService.AuditEmitEvent({ PerformedType: user_role.name, ActionType: LogActionEnum.Update, PrimaryId: [UserRoleUpdateData.id], UserIp: UserIp });\r\n    await this._CacheService.Store(`${CacheEnum.UserRole}`, [{ ...UserRoleUpdateData, id: Id }]);\r\n    return UserRoleUpdateData;\r\n  }\r\n\r\n  async Delete(Id: string, UserIp: string) {\r\n    const UserRoleData = await user_role.findOne({ where: { id: Id } });\r\n    if (!UserRoleData) {\r\n      throw new Error(ResponseEnum.NotFound);\r\n    }\r\n    this._AuditLogService.AuditEmitEvent({ PerformedType: user_role.name, ActionType: LogActionEnum.Delete, PrimaryId: [UserRoleData.id], UserIp: UserIp });\r\n    await UserRoleData.remove();\r\n    await this._CacheService.Remove(`${CacheEnum.UserRole}:${Id}`, UserRoleData);\r\n    return true;\r\n  }\r\n\r\n}\r\n"],"names":["UserRoleService","GetAll","ResultData","_CacheService","Get","CacheEnum","UserRole","length","UserRoleList","user_role","find","where","created_by_id","Not","Store","GetAllExpectSuperAdmin","GetById","UserRoleId","UserRoleData","findOne","id","Insert","UserId","UserIp","_UserRoleData","name","code","landing_page","permissions","created_on","Date","insert","_AuditLogService","AuditEmitEvent","PerformedType","ActionType","LogActionEnum","PrimaryId","Update","Id","UserRoleUpdateData","Error","updated_by_id","updated_on","update","Delete","ResponseEnum","NotFound","remove","Remove"],"mappings":"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"}