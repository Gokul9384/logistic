{"version":3,"sources":["../../../src/Service/Admin/Currency.service.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common';\r\nimport { currency } from '@Database/Table/Admin/currency';\r\nimport { ResponseEnum } from '@Helper/Enum/ResponseEnum';\r\nimport { CurrencyModel } from '@Model/Admin/Currency.model';\r\nimport { AuditLogService } from './AuditLog.service';\r\nimport { LogActionEnum } from '@Helper/Enum/AuditLogEnum';\r\nimport { CacheService } from '@Service/Cache.service';\r\nimport { CacheEnum } from '@Helper/Enum/CacheEnum';\r\nimport { UserIp } from '@Root/Helper/Common.helper';\r\n\r\n@Injectable()\r\nexport class CurrencyService {\r\n  constructor(private _AuditLogService: AuditLogService,\r\n    private _CacheService: CacheService) {\r\n  }\r\n\r\n  async GetAll() {\r\n    const ResultData = await this._CacheService.Get(`${CacheEnum.Currency}:*`);\r\n    if (ResultData.length > 0) {\r\n      return ResultData;\r\n    }\r\n    else {\r\n      const CurrencyList = await currency.find();\r\n      await this._CacheService.Store(`${CacheEnum.Currency}`, CurrencyList);\r\n      return CurrencyList;\r\n    }\r\n  }\r\n\r\n  async GetById(CurrencyId: string) {\r\n    const ResultData = await this._CacheService.Get(`${CacheEnum.Currency}:${CurrencyId}`);\r\n    if (ResultData.length > 0) {\r\n      return ResultData[0];\r\n    }\r\n    else {\r\n      const CurrencyData = await currency.findOne({ where: { id: CurrencyId } });\r\n      await this._CacheService.Store(`${CacheEnum.Currency}:${CurrencyId}`, [CurrencyData]);\r\n      return CurrencyData;\r\n    }\r\n  }\r\n\r\n  async Insert(CurrencyData: CurrencyModel, UserId: string, UserIp: string) {\r\n    const _CurrencyData = new currency();\r\n    _CurrencyData.name = CurrencyData.name;\r\n    _CurrencyData.code = CurrencyData.code;\r\n    _CurrencyData.symbol = CurrencyData.symbol;\r\n    _CurrencyData.created_by_id = UserId;\r\n    _CurrencyData.created_on = new Date();\r\n    await currency.insert(_CurrencyData);\r\n    this._AuditLogService.AuditEmitEvent({ PerformedType: currency.name, ActionType: LogActionEnum.Insert, PrimaryId: [_CurrencyData.id], UserIp: UserIp });\r\n    await this._CacheService.Store(`${CacheEnum.Currency}`, [_CurrencyData]);\r\n    return _CurrencyData\r\n  }\r\n\r\n  async Update(Id: string, CurrencyData: CurrencyModel, UserId: string, UserIp: string) {\r\n    const CurrencyUpdateData = await currency.findOne({ where: { id: Id } });\r\n    if (!CurrencyUpdateData) {\r\n      throw new Error('Record not found')\r\n    }\r\n    CurrencyUpdateData.name = CurrencyData.name;\r\n    CurrencyUpdateData.code = CurrencyData.code;\r\n    CurrencyUpdateData.symbol = CurrencyData.symbol;\r\n    CurrencyUpdateData.updated_by_id = UserId;\r\n    CurrencyUpdateData.updated_on = new Date();\r\n    await currency.update(Id, CurrencyUpdateData);\r\n    this._AuditLogService.AuditEmitEvent({ PerformedType: currency.name, ActionType: LogActionEnum.Update, PrimaryId: [CurrencyUpdateData.id], UserIp: UserIp });\r\n    await this._CacheService.Store(`${CacheEnum.Currency}`, [{ ...CurrencyUpdateData, id: Id }]);\r\n    return CurrencyUpdateData;\r\n  }\r\n\r\n  async Delete(Id: string, UserIp: string) {\r\n    const CurrencyData = await currency.findOne({ where: { id: Id } });\r\n    if (!CurrencyData) {\r\n      throw new Error(ResponseEnum.NotFound);\r\n    }\r\n    await CurrencyData.remove();\r\n    this._AuditLogService.AuditEmitEvent({ PerformedType: currency.name, ActionType: LogActionEnum.Delete, PrimaryId: [CurrencyData.id], UserIp: UserIp });\r\n    await this._CacheService.Remove(`${CacheEnum.Currency}:${Id}`, CurrencyData);\r\n    return true;\r\n  }\r\n\r\n}\r\n"],"names":["CurrencyService","GetAll","ResultData","_CacheService","Get","CacheEnum","Currency","length","CurrencyList","currency","find","Store","GetById","CurrencyId","CurrencyData","findOne","where","id","Insert","UserId","UserIp","_CurrencyData","name","code","symbol","created_by_id","created_on","Date","insert","_AuditLogService","AuditEmitEvent","PerformedType","ActionType","LogActionEnum","PrimaryId","Update","Id","CurrencyUpdateData","Error","updated_by_id","updated_on","update","Delete","ResponseEnum","NotFound","remove","Remove"],"mappings":"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"}