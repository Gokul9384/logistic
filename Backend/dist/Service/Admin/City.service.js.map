{"version":3,"sources":["../../../src/Service/Admin/City.service.ts"],"sourcesContent":["import { Injectable } from \"@nestjs/common\";\r\nimport { AuditLogService } from \"./AuditLog.service\";\r\nimport { city } from \"@Root/Database/Table/Admin/city\";\r\nimport { ResponseEnum } from \"@Root/Helper/Enum/ResponseEnum\";\r\nimport { CityModel } from \"@Model/Admin/City.model\";\r\nimport { LogActionEnum } from \"@Root/Helper/Enum/AuditLogEnum\";\r\n\r\n\r\n@Injectable()\r\nexport class CityService {\r\n  constructor(private _AuditLogService: AuditLogService) { }\r\n\r\n  async GetAll() {\r\n    return await city.find({ relations: [\"state\", \"country\"] });\r\n  }\r\n\r\n  async GetById(CityId: string) {\r\n    const CityData = await city.findOne({ relations: [\"state\"], where: { id: CityId } });\r\n    if (!CityData) {\r\n      throw new Error(ResponseEnum.NotFound);\r\n    }\r\n    return CityData;\r\n  }\r\n\r\n  async Insert(CityData: CityModel, UserId: string, UserIp: string) {\r\n    const _CityData = new city();\r\n    _CityData.name = CityData.name;\r\n    _CityData.code = CityData.code;\r\n    _CityData.state_id = CityData.state_id;\r\n    _CityData.country_id = CityData.country_id;\r\n    _CityData.created_by_id = UserId;\r\n    _CityData.created_on = new Date();\r\n    await city.insert(_CityData);\r\n    this._AuditLogService.AuditEmitEvent({ PerformedType: city.name, ActionType: LogActionEnum.Insert, PrimaryId: [_CityData.id], UserIp: UserIp });\r\n    return _CityData;\r\n  }\r\n\r\n  async Update(Id: string, CityData: CityModel, UserId: string, UserIp: string) {\r\n    const CityUpdateData = await city.findOne({ where: { id: Id } });\r\n    if (!CityUpdateData) {\r\n      throw new Error('Record not found')\r\n    }\r\n    CityUpdateData.name = CityData.name;\r\n    CityUpdateData.code = CityData.code;\r\n    CityUpdateData.state_id = CityData.state_id;\r\n    CityUpdateData.country_id = CityData.country_id;\r\n    CityUpdateData.updated_by_id = UserId;\r\n    CityUpdateData.updated_on = new Date();\r\n    await city.update(Id, CityUpdateData);\r\n    this._AuditLogService.AuditEmitEvent({ PerformedType: city.name, ActionType: LogActionEnum.Update, PrimaryId: [CityUpdateData.id], UserIp: UserIp });\r\n    return CityUpdateData;\r\n  }\r\n\r\n  async Delete(Id: string, UserIp: string) {\r\n    const CityData = await city.findOne({ where: { id: Id } });\r\n    if (!CityData) {\r\n      throw new Error(ResponseEnum.NotFound);\r\n    }\r\n    await CityData.remove();\r\n    this._AuditLogService.AuditEmitEvent({ PerformedType: city.name, ActionType: LogActionEnum.Delete, PrimaryId: [CityData.id], UserIp: UserIp });\r\n    return true;\r\n  }\r\n}\r\n"],"names":["CityService","GetAll","city","find","relations","GetById","CityId","CityData","findOne","where","id","Error","ResponseEnum","NotFound","Insert","UserId","UserIp","_CityData","name","code","state_id","country_id","created_by_id","created_on","Date","insert","_AuditLogService","AuditEmitEvent","PerformedType","ActionType","LogActionEnum","PrimaryId","Update","Id","CityUpdateData","updated_by_id","updated_on","update","Delete","remove"],"mappings":";;;;+BASaA;;;eAAAA;;;wBATc;iCACK;sBACX;8BACQ;8BAEC;;;;;;;;;;AAIvB,IAAA,AAAMA,cAAN,MAAMA;IAGX,MAAMC,SAAS;QACb,OAAO,MAAMC,UAAI,CAACC,IAAI,CAAC;YAAEC,WAAW;gBAAC;gBAAS;aAAU;QAAC;IAC3D;IAEA,MAAMC,QAAQC,MAAc,EAAE;QAC5B,MAAMC,WAAW,MAAML,UAAI,CAACM,OAAO,CAAC;YAAEJ,WAAW;gBAAC;aAAQ;YAAEK,OAAO;gBAAEC,IAAIJ;YAAO;QAAE;QAClF,IAAI,CAACC,UAAU;YACb,MAAM,IAAII,MAAMC,0BAAY,CAACC,QAAQ;QACvC;QACA,OAAON;IACT;IAEA,MAAMO,OAAOP,QAAmB,EAAEQ,MAAc,EAAEC,MAAc,EAAE;QAChE,MAAMC,YAAY,IAAIf,UAAI;QAC1Be,UAAUC,IAAI,GAAGX,SAASW,IAAI;QAC9BD,UAAUE,IAAI,GAAGZ,SAASY,IAAI;QAC9BF,UAAUG,QAAQ,GAAGb,SAASa,QAAQ;QACtCH,UAAUI,UAAU,GAAGd,SAASc,UAAU;QAC1CJ,UAAUK,aAAa,GAAGP;QAC1BE,UAAUM,UAAU,GAAG,IAAIC;QAC3B,MAAMtB,UAAI,CAACuB,MAAM,CAACR;QAClB,IAAI,CAACS,gBAAgB,CAACC,cAAc,CAAC;YAAEC,eAAe1B,UAAI,CAACgB,IAAI;YAAEW,YAAYC,2BAAa,CAAChB,MAAM;YAAEiB,WAAW;gBAACd,UAAUP,EAAE;aAAC;YAAEM,QAAQA;QAAO;QAC7I,OAAOC;IACT;IAEA,MAAMe,OAAOC,EAAU,EAAE1B,QAAmB,EAAEQ,MAAc,EAAEC,MAAc,EAAE;QAC5E,MAAMkB,iBAAiB,MAAMhC,UAAI,CAACM,OAAO,CAAC;YAAEC,OAAO;gBAAEC,IAAIuB;YAAG;QAAE;QAC9D,IAAI,CAACC,gBAAgB;YACnB,MAAM,IAAIvB,MAAM;QAClB;QACAuB,eAAehB,IAAI,GAAGX,SAASW,IAAI;QACnCgB,eAAef,IAAI,GAAGZ,SAASY,IAAI;QACnCe,eAAed,QAAQ,GAAGb,SAASa,QAAQ;QAC3Cc,eAAeb,UAAU,GAAGd,SAASc,UAAU;QAC/Ca,eAAeC,aAAa,GAAGpB;QAC/BmB,eAAeE,UAAU,GAAG,IAAIZ;QAChC,MAAMtB,UAAI,CAACmC,MAAM,CAACJ,IAAIC;QACtB,IAAI,CAACR,gBAAgB,CAACC,cAAc,CAAC;YAAEC,eAAe1B,UAAI,CAACgB,IAAI;YAAEW,YAAYC,2BAAa,CAACE,MAAM;YAAED,WAAW;gBAACG,eAAexB,EAAE;aAAC;YAAEM,QAAQA;QAAO;QAClJ,OAAOkB;IACT;IAEA,MAAMI,OAAOL,EAAU,EAAEjB,MAAc,EAAE;QACvC,MAAMT,WAAW,MAAML,UAAI,CAACM,OAAO,CAAC;YAAEC,OAAO;gBAAEC,IAAIuB;YAAG;QAAE;QACxD,IAAI,CAAC1B,UAAU;YACb,MAAM,IAAII,MAAMC,0BAAY,CAACC,QAAQ;QACvC;QACA,MAAMN,SAASgC,MAAM;QACrB,IAAI,CAACb,gBAAgB,CAACC,cAAc,CAAC;YAAEC,eAAe1B,UAAI,CAACgB,IAAI;YAAEW,YAAYC,2BAAa,CAACQ,MAAM;YAAEP,WAAW;gBAACxB,SAASG,EAAE;aAAC;YAAEM,QAAQA;QAAO;QAC5I,OAAO;IACT;IAnDA,YAAY,AAAQU,gBAAiC,CAAE;aAAnCA,mBAAAA;IAAqC;AAoD3D"}